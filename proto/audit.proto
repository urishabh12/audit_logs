syntax="proto3";

package audit;

option go_package = "github.com/urishabh12/audit_logs";

service AuditService {
    rpc Log(LogRequest) returns (LogResponse) {}
    rpc GetLogByEntity(LogByEntityRequest) returns (LogsResponse) {}
    rpc GetLogByEntityPaginated(LogByEntityPagedRequest) returns (LogsResponse) {}
    rpc GetLogByEntityID(LogByEntityIDRequest) returns (LogsResponse) {}
    rpc GetLogByEntityIDPaginated(LogByEntityIDPagedRequest) returns (LogsResponse) {}
}

message LogRequest {
    int64 TenantID = 1;
    int64 UserID = 2;
    int64 Timestamp = 3;
    int64 EntityID = 4;
    string Entity = 5;
    string Action = 6;
    string Data = 7;
}

message LogByEntityRequest {
    int64 TenantID = 1;
    string Entity = 5;
    int64 Timestamp = 3;
}

message LogByEntityPagedRequest {
    int64 TenantID = 1;
    string Entity = 2;
    int64 StartTimestamp = 3;
    int64 EndTimestamp = 4;
    int32 PageSize = 5;
}

message LogByEntityIDRequest {
    int64 TenantID = 1;
    string Entity = 2;
    int64 EntityID = 3;
    int64 Timestamp = 4;
}

message LogByEntityIDPagedRequest {
    int64 TenantID = 1;
    string Entity = 2;
    int64 EntityID = 3;
    int64 StartTimestamp = 4;
    int64 EndTimestamp = 5;
    int32 PageSize = 6;
}

message LogsResponse {
    repeated AuditLog Logs  = 1;
}

message AuditLog {
    int64 TenantID = 1;
    int64 UserID = 2;
    int64 Timestamp = 3;
    int64 EntityID = 4;
    string Entity = 5;
    string Action = 6;
    string Data = 7;
}

message LogResponse {
    bool status = 1;
}